name: Docker Build and Publish

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:  # 允许手动触发

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/deep-research-web

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ matrix.platform }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.platform }}-latest
            type=sha,prefix=${{ matrix.platform }}-${{ github.ref_name }}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha,scope=${{ matrix.platform }}
          cache-to: |
            type=gha,mode=max,scope=${{ matrix.platform }}
          target: runner

  merge:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Create and push manifest
        run: |
          docker manifest create ${{ env.IMAGE_NAME }}:latest \
            ${{ env.IMAGE_NAME }}:linux-amd64-latest \
            ${{ env.IMAGE_NAME }}:linux-arm64-latest
          
          # 添加架构信息
          docker manifest annotate ${{ env.IMAGE_NAME }}:latest \
            ${{ env.IMAGE_NAME }}:linux-amd64-latest --os linux --arch amd64
          docker manifest annotate ${{ env.IMAGE_NAME }}:latest \
            ${{ env.IMAGE_NAME }}:linux-arm64-latest --os linux --arch arm64
          
          # 推送 manifest
          docker manifest push ${{ env.IMAGE_NAME }}:latest

          # 对 commit sha 标签也做同样的操作
          docker manifest create ${{ env.IMAGE_NAME }}:${{ github.sha }} \
            ${{ env.IMAGE_NAME }}:linux-amd64-${{ github.ref_name }}-${{ github.sha }} \
            ${{ env.IMAGE_NAME }}:linux-arm64-${{ github.ref_name }}-${{ github.sha }}
          
          docker manifest annotate ${{ env.IMAGE_NAME }}:${{ github.sha }} \
            ${{ env.IMAGE_NAME }}:linux-amd64-${{ github.ref_name }}-${{ github.sha }} --os linux --arch amd64
          docker manifest annotate ${{ env.IMAGE_NAME }}:${{ github.sha }} \
            ${{ env.IMAGE_NAME }}:linux-arm64-${{ github.ref_name }}-${{ github.sha }} --os linux --arch arm64
          
          docker manifest push ${{ env.IMAGE_NAME }}:${{ github.sha }}
